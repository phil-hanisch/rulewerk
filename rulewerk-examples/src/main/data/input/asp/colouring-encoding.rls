colour(red) .
colour(blue) .

vertex(1) .
vertex(2) .
vertex(3) .
vertex(4) .
vertex(5) .

edge(1,2) .
edge(2,3) .
edge(3,4) .
edge(4,5) .
edge(5,1) .


coloured(?X, red), coloured(?X, blue) :- vertex(?X) .

% coloured(?X, ?C) :- vertex(?X), colour(?C) .
% { coloured(X, C) : colour(C) } = 1 :- vertex(X) .
% achieved: every vertex is coloured

fail(?X, ?Y) :- edge(?X,?Y), coloured(?X, ?C), coloured(?Y, ?C) .
% achieved: vertices that are neighbours do not have the same colour
